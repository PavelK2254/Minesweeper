!function(modules){var installedModules={};function __webpack_require__(moduleId){if(installedModules[moduleId])return installedModules[moduleId].exports;var module=installedModules[moduleId]={i:moduleId,l:!1,exports:{}};return modules[moduleId].call(module.exports,module,module.exports,__webpack_require__),module.l=!0,module.exports}__webpack_require__.m=modules,__webpack_require__.c=installedModules,__webpack_require__.d=function(exports,name,getter){__webpack_require__.o(exports,name)||Object.defineProperty(exports,name,{enumerable:!0,get:getter})},__webpack_require__.r=function(exports){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(exports,"__esModule",{value:!0})},__webpack_require__.t=function(value,mode){if(1&mode&&(value=__webpack_require__(value)),8&mode)return value;if(4&mode&&"object"==typeof value&&value&&value.__esModule)return value;var ns=Object.create(null);if(__webpack_require__.r(ns),Object.defineProperty(ns,"default",{enumerable:!0,value:value}),2&mode&&"string"!=typeof value)for(var key in value)__webpack_require__.d(ns,key,(function(key){return value[key]}).bind(null,key));return ns},__webpack_require__.n=function(module){var getter=module&&module.__esModule?function(){return module.default}:function(){return module};return __webpack_require__.d(getter,"a",getter),getter},__webpack_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,property)},__webpack_require__.p="",__webpack_require__(__webpack_require__.s="Kte0")}({Kte0:function(module,__webpack_exports__,__webpack_require__){"use strict";var numOfColumns;__webpack_require__.r(__webpack_exports__);let flaggedTileIndexes=new Array;function getTileX(currentIndex){return currentIndex%numOfColumns}function getTileY(currentIndex){return Math.floor(currentIndex/numOfColumns)}var leastMineProbability={index:0,openedCount:0},cell={init:function(mapArray,index){this.currentIndex=index,this.X=getTileX(this.currentIndex),this.Y=getTileY(this.currentIndex),this.UL=0==getTileX(this.currentIndex)||0==getTileY(this.currentIndex)?-1:mapArray[this.currentIndex-numOfColumns-1],this.U=0==getTileY(this.currentIndex)?-1:mapArray[this.currentIndex-numOfColumns],this.UR=getTileX(this.currentIndex)>=numOfColumns-1||0==getTileY(this.currentIndex)?-1:mapArray[this.currentIndex-numOfColumns+1],this.L=0==getTileX(this.currentIndex)?-1:mapArray[this.currentIndex-1],this.SELF=mapArray[this.currentIndex],this.R=getTileX(this.currentIndex)>=numOfColumns-1?-1:mapArray[this.currentIndex+1],this.DL=0==getTileX(this.currentIndex)||null==mapArray[this.currentIndex+numOfColumns]?-1:mapArray[this.currentIndex+numOfColumns-1],this.D=null==mapArray[this.currentIndex+numOfColumns]?-1:mapArray[this.currentIndex+numOfColumns],this.DR=getTileX(this.currentIndex)>=numOfColumns-1||null==mapArray[this.currentIndex+numOfColumns]?-1:mapArray[this.currentIndex+numOfColumns+1]},isUpLegit:function(){return 0!=getTileY(this.currentIndex)},isLeftLegit:function(){return 0!=getTileX(this.currentIndex)},isRightLegit:function(){return this.currentIndex<numOfColumns},info:function(){console.log(`X: ${this.X} Y: ${this.Y}\n\n                 top: UL-${this.UL} U-${this.U} UR-${this.UR} \n\n                 mid: L-${this.L} SELF-${this.SELF} R-${this.R} \n\n                 bot: DL-${this.DL} D-${this.D} DR-${this.DR}`)},getSELF:function(){return this.SELF},getX:function(){return this.X},getY:function(){return this.Y},sumOfUnopened:function(){var result=0;return result+="□"==this.UL||"#"==this.UL?1:0,result+="□"==this.U||"#"==this.U?1:0,result+="□"==this.UR||"#"==this.UR?1:0,result+="□"==this.L||"#"==this.L?1:0,result+="□"==this.R||"#"==this.R?1:0,result+="□"==this.DL||"#"==this.DL?1:0,(result+="□"==this.D||"#"==this.D?1:0)+("□"==this.DR||"#"==this.DR?1:0)},hasMinesAround:function(){return this.sumOfUnopened()==this.SELF&&this.SELF>0},getUnopenedTilesIndex:function(){var minesTiles=new Array;return"□"!=this.UL&&"#"!=this.UL||minesTiles.push(this.currentIndex-numOfColumns-1),"□"!=this.U&&"#"!=this.U||minesTiles.push(this.currentIndex-numOfColumns),("□"==this.UR&&getTileX(this.currentIndex)<numOfColumns-1||"#"==this.UR)&&minesTiles.push(this.currentIndex-numOfColumns+1),("□"==this.L&&0!=getTileX(this.currentIndex)||"#"==this.L)&&minesTiles.push(this.currentIndex-1),("□"==this.R&&getTileX(this.currentIndex)<numOfColumns-1||"#"==this.R)&&minesTiles.push(this.currentIndex+1),("□"==this.DL&&0!=getTileX(this.currentIndex)||"#"==this.DL)&&minesTiles.push(this.currentIndex+numOfColumns-1),"□"!=this.D&&"#"!=this.D||minesTiles.push(this.currentIndex+numOfColumns),("□"==this.DR&&getTileX(this.currentIndex)<numOfColumns-1||"#"==this.DR)&&minesTiles.push(this.currentIndex+numOfColumns+1),minesTiles},getFlaggedTiles:function(){var flaggedTiles=new Array;return this.getUnopenedTilesIndex().forEach(item=>{flaggedTileIndexes.indexOf(item+getTileY(item))>=0&&flaggedTiles.push(item)}),flaggedTiles}};addEventListener("message",({data:data})=>{var map=data[0];flaggedTileIndexes=data[1];var startGuessting=data[2];if(null!=map){for(numOfColumns=map.indexOf("\n",2),map.lastIndexOf("□");map.indexOf("\n")>=0;)map=map.replace("\n","");var mapArray=map.split("");leastMineProbability.index=0,leastMineProbability.openedCount=0,startGuessting?/\d/.test(mapArray)?function(mapArray){mapArray.forEach((element,index,arr)=>{cell.init(mapArray,index),+cell.getSELF()>0&&cell.getUnopenedTilesIndex().length-cell.getFlaggedTiles().length>+cell.getSELF()&&(leastMineProbability.index=index,leastMineProbability.openedCount=cell.getUnopenedTilesIndex().length-cell.getFlaggedTiles().length-parseInt(cell.getSELF()))}),cell.init(mapArray,leastMineProbability.index);var possibleTiles=new Array;cell.getUnopenedTilesIndex().forEach(element=>{cell.getFlaggedTiles().indexOf(element)&&possibleTiles.push(element)});var winningIndex=possibleTiles[Math.floor(Math.random()*possibleTiles.length)],tile={x:getTileX(winningIndex),y:getTileY(winningIndex)};postMessage({cmd:"open",payload:tile})}(mapArray):function(mapArray){var randomIndex=Math.floor(Math.random()*mapArray.length-1),tile={x:getTileX(randomIndex),y:getTileY(randomIndex)};postMessage({cmd:"open",payload:tile})}(mapArray):function(mapArray){var tilesToOpen=new Array;mapArray.forEach((element,index,arr)=>{if(cell.init(mapArray,index),"0"!=cell.getSELF()&&+cell.getSELF()-cell.getFlaggedTiles().length==0)cell.getUnopenedTilesIndex().forEach((item,index,arr)=>{if(cell.getFlaggedTiles().indexOf(item)<0){var tile={x:getTileX(item),y:getTileY(item)};tilesToOpen.push(tile)}});else if(cell.hasMinesAround()){var flagTiles=new Array;cell.getUnopenedTilesIndex().forEach(tile=>{cell.getFlaggedTiles().indexOf(tile)<0&&flagTiles.push(tile+getTileY(tile))}),postMessage({cmd:"flag",payload:flagTiles})}else index==arr.length-1&&(postMessage({cmd:"done",payload:tilesToOpen}),tilesToOpen.length=0)})}(mapArray)}else postMessage({cmd:"done",payload:new Array})})}});